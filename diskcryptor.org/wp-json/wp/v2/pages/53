{"id":53,"date":"2020-02-01T09:32:58","date_gmt":"2020-02-01T09:32:58","guid":{"rendered":"https:\/\/www.diskcryptor.org\/?page_id=53"},"modified":"2021-03-18T08:39:31","modified_gmt":"2021-03-18T08:39:31","slug":"technical-aspects","status":"publish","type":"page","link":"https:\/\/diskcryptor.org\/technical-aspects\/","title":{"rendered":"Technical Aspects"},"content":{"rendered":"<h2>Notable Usage Characteristics<\/h2>\n<p>For user\\'s convenience, DiskCryptor\\'s driver caches entered passwords in the kernel memory, and automatically chooses the appropriate password during the volume mount. If the right password is not detected, the program then brings up the dialogue window to ask for it. The passwords are cached in the non-swap memory and do not get into the page-file. Cached passwords can be erased via menu or you can switch off this feature in the program settings.<\/p>\n<p>External USB flash drives or any other removable volumes will be mounted automatically. DiskCryptor\\'s files are required only to install the program and manage encrypted volumes and are not necessary for a day-to-day use. If all your partitions are encrypted with the same password it is required to enter it only once during the boot time.<\/p>\n<h2>Security<\/h2>\n<p>DiskCryptor supports AES-256, Twofish and Serpent encryption algorithms. Extra cautions users can also choose to use a combination of cascaded algorithms, which would keep data safe even in case if one of the algorithms would be broken. The encryption key is randomly generated and is stored in an encrypted form, in the first sector of a volume. The guarantee of a safe cryptographic algorithm implementations, is that they are verified by a built-in test according to official test vectors, and open source code assures that no backdoors are present in the program.<\/p>\n<h2>Performance<\/h2>\n<p>Cryptographic Algorithms for the x86 version are implemented in Assembly Language, and the implementation has maximum number of optimizations for the Intel Core i5\u2013i7 processors, while still performing sufficiently fast on any other processors as well. Almost all possible enhancements to improve the performance have been applied, and in particular, \u2014 the AES algorithm code is being dynamically generated, with the optimization made for the usage of a particular key. On multiprocessor systems encryption operations can run in parallel, where DiskCryptor automatically chooses optimal parallel mode based on system configuration. DiskCryptor also is able to make use of hardware cryptography extensions, if your CPU supports them. <a href=\"https:\/\/www.diskcryptor.org\/benchmark\/\">DiskCryptor vs TrueCrypt Encryption Benchmark<\/a>.<\/p>\n<p>On the Intel Core 2 Quad Q6600 CPU, data encryption speed amounts to 104 MB\/s per core. The maximum speed of reading the data from a single hard disk equals to 80 MB\/s so it can work with up to 5 different disks without loss of performance, when using the aforementioned type of processor. In case if your disks are not operating under a constant high load, then it is possible to work with even higher number of disks, and on a weaker system, without losing the performance.<\/p>\n<h2>Compatibility<\/h2>\n<p>DiskCryptor releases from 0.1 to 0.4 were fully compatible with TrueCrypt, as they used a corresponding partition format and encrypted data with AES-256 algorithm in LRW mode. Starting from DiskCryptor 0.5, the program relies upon its own partition format, developed specifically for encrypting partitions with data on them, as TrueCrypt format has been originally meant for creation of empty volumes. That move allowed for an increase in DiskCryptor\\'s stability, eliminated many problems associated with file systems, and created an optimal format for further development of the program.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Notable Usage Characteristics For user\\&#8217;s convenience, DiskCryptor\\&#8217;s driver caches entered passwords in the kernel memory, and automatically chooses the appropriate password during the volume mount. If the right password is not detected, the program then brings up the dialogue window to ask for it. The passwords are cached in the non-swap memory and do not &hellip; <a href=\"https:\/\/diskcryptor.org\/technical-aspects\/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">Technical Aspects<\/span> <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/53"}],"collection":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/comments?post=53"}],"version-history":[{"count":1,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/53\/revisions"}],"predecessor-version":[{"id":161,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/53\/revisions\/161"}],"wp:attachment":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/media?parent=53"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}