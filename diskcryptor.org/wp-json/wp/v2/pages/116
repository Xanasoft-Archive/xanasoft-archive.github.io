{"id":116,"date":"2020-02-09T11:02:18","date_gmt":"2020-02-09T11:02:18","guid":{"rendered":"https:\/\/www.diskcryptor.org\/?page_id=116"},"modified":"2021-03-18T08:41:00","modified_gmt":"2021-03-18T08:41:00","slug":"why-not-bitlocker","status":"publish","type":"page","link":"https:\/\/diskcryptor.org\/why-not-bitlocker\/","title":{"rendered":"Why not BitLocker"},"content":{"rendered":"<h1>First what is BitLocker<\/h1>\n<p><a href=\"https:\/\/en.wikipedia.org\/wiki\/BitLocker#Security_concerns\">BitLocker<\/a> is a logical volume encryption feature included with Microsoft Windows (Pro and Enterprise\/Education versions) starting with Windows Vista. It is designed to protect data by providing encryption for entire volumes. On older versions of windows like vista and 7 this feature can only work with a TPM-Chip.<\/p>\n<h1>So Why not BitLocker<\/h1>\n<p>First and foremost, BitLocker is proprietary software that was never publicly audited created by a company that falls under US law hence has to obey <a href=\"https:\/\/en.wikipedia.org\/wiki\/National_security_letter\">National security letters<\/a>, see the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Lavabit#Suspension_and_gag_order\">Lavabit case<\/a> for an example how that can play out.<\/p>\n<p>Encryption software of any kind should there for be always open source, that is not a guarantee for it being secure, as with the cases of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Heartbleed\">Heartbleed<\/a> and Apples <a href=\"https:\/\/nakedsecurity.sophos.com\/2014\/02\/24\/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch\/\">GotoFail<\/a>, but being open source is a necessary precondition for it to be able to be considered secure at all.<\/p>\n<h2>BitLocker does not really care for security<\/h2>\n<p>As shown by the cases below Microsoft in the past did not show the necessary due diligence when developing BitLocker, leaving users to be easily compromised. BitLocker is clearly a product for enterprises designed to be easily manageable at the expense of security. It provides a commercially accepted solution to delegate the responsibility for customer data protection to \u201csomeone else\u201d. It is not suitable to protect sensitive personal data, or confidential trade secrets, from a skilled or resourceful adversary.<\/p>\n<h3>Case #1 - Self-encrypting deception<\/h3>\n<p>Starting with windows 8 (and server 2012) BitLocker got a feature, which is enabled by default, that allows the cryptographic operations of BitLocker encryption to be offloaded to the storage device\\'s hardware.<\/p>\n<p>However, Microsoft did not care to audit the various Self-Encrypting Drives (SEDs) hence leaving millions of its users with practically no security what\u2019s o ever. As at the CCC in December of 2018 during the talk <a href=\"https:\/\/media.ccc.de\/v\/35c3-9671-self-encrypting_deception\">Self-encrypting deception<\/a> independent security researchers have demonstrated live on stage how to bypass the hardware encryption of many SSD models using a ~20\u20ac \u00b5C programmer\/debugger. Demonstrating that for the past 6 years users of BitLocker and such drives were entirely compromised and did not even knew it. To alleviate this issue the user would have to know about it and use a Groupe Policy to disable this feature. It took Microsoft until late 2019 to change the preset and by default <a href=\"https:\/\/borncity.com\/win\/2019\/09\/30\/microsoft-setzt-bei-self-encrypting-drives-seds-auf-bitlocker-verschlsselung\/\">no longer trust SEDs<\/a>.<\/p>\n<h3>Case #2 - TPMs can\u2019t be trusted<\/h3>\n<p>By default, Microsoft BitLocker is using the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Trusted_Platform_Module\">Trusted Platform Module (TPM)<\/a>, to manage the keys, if one is present. Sound\u2019s good until you realize that you can <a href=\"https:\/\/pulsesecurity.co.nz\/articles\/TPM-sniffing\">sniff the LPC bus and extract the volume master key<\/a>, now isn\u2019t that handy.<\/p>\n<p>The issue with TPM\u2019s gets a bit more complicated, modern PC\u2019s often no longer come with a dedicated hardware TPM, instead this feature is being provided by the chipset. So, no exposed LPC bus to connect the sniffer to, one my think, but the reality strikes again. The TPM functionality is nowadays implemented as a firmware module in the Intel <a href=\"https:\/\/en.wikipedia.org\/wiki\/Intel_Management_Engine\">Management Engine (ME)<\/a> or the AMD <a href=\"https:\/\/en.wikichip.org\/wiki\/amd\/secure_processor\">Platform Security Processor<\/a> respectively.<\/p>\n<p>And the Intel ME already showed in the past <a href=\"\/\/borncity.com\/win\/2018\/08\/30\/sicherheit-angriff-auf-tpm-und-intel-me-dump\/\">gaping security holes<\/a>, there is a nice talk about that at the <a href=\"https:\/\/media.ccc.de\/v\/33c3-8069-tapping_into_the_core#t=582\">33c3<\/a> and <a href=\"https:\/\/conference.hitb.org\/hitbsecconf2017ams\/materials\/D2T4%20-%20Maxim%20Goryachy%20and%20Mark%20Ermalov%20-%20Intel%20DCI%20Secrets.pdf\">HITBSecConf2017<\/a> and of cause <a href=\"https:\/\/media.ccc.de\/v\/36c3-10694-intel_management_engine_deep_dive\">36c3<\/a>. There is also a Proof Of Concept on Git Hub: <a href=\"https:\/\/github.com\/ptresearch\/IntelTXE-PoC\">https:\/\/github.com\/ptresearch\/IntelTXE-PoC<\/a><\/p>\n<p>The issue here is, like before, Microsoft putting blind trust in the hardware vendors, and is not telling it to the user. The correct approached would be to present all the options to the user and provide information about the potential risks.<\/p>\n<p>Given that hardware implementations of encryption are typically yet another black box you can blindly trust, but should not, a reasonable argument is to be made that software-based implementations should by default be preferred.<\/p>\n<h3>Case #3 - For your expedience BitLocker can be temporarily suspend<\/h3>\n<p>BitLocker in Windows 10 can be configured to <a href=\"https:\/\/docs.microsoft.com\/en-us\/powershell\/module\/bitlocker\/suspend-bitlocker?view=win10-ps\">store the encryption keys in \u201cthe clear\u201d<\/a> this allows you among other things \u201cRestarting the computer for maintenance without requiring user input\u201d, \u201cTurning off (disabling) or clearing the TPM\u2026\u201d, \u201cMoving a BitLocker-protected drive to another computer\u2026\u201d, etc\u2026 so what this feature does is to store a encryption key in plaintext on the drive itself.<\/p>\n<p><strong>Yes, a secret key that is supposed to ensure your security is write in plaintext i.e. unencrypted to the very same disk drive it is supposed to protect, all for your expedience.<\/strong><\/p>\n<p>Modern SSD\u2019s use something called <a href=\"https:\/\/en.wikipedia.org\/wiki\/Wear_leveling\">wear leveling<\/a> to prolong the life of your SSD, what it does is when writing to the drive the SSD intelligently remaps sectors in the background to spread the wear and tear more equally among all of them. The operating system is not aware of this operation hence on an SSD you can never definitely overwrite a sector, as your write attempt can be redirected to a less used one transparently. Not even the overwriting of the entire SSD can guarantee data to be overwritten as modern SSD\u2019s use <a href=\"https:\/\/searchstorage.techtarget.com\/definition\/overprovisioning-SSD-overprovisioning\">overprovisioning<\/a> to improve performance. The overprovisioned sectors can be accessed by an attacker eider by a firmware hack or by removing the flash chips and reading them out one by one using appropriate hardware.<\/p>\n<p>Now this feature is not only an option for users that don\u2019t care, but in fact used by windows during automatically installed Feature Upgrades.<\/p>\n<h2>BitLocker uploades your recovery keys to the cloud without asking<\/h2>\n<p>If you are using windows 10 with a Microsoft account windows will \u201csave\u201d your BitLocker recovery keys in your Microsoft account. This is done automatically and without an option to opt out, as described <a href=\"https:\/\/theintercept.com\/2015\/12\/28\/recently-bought-a-windows-computer-microsoft-probably-has-your-encryption-key\/\">here<\/a> now granted if you care about your privacy you shouldn\u2019t use a Microsoft account at all, but the mere existence of this option is a huge red flag and a threat in itself.<\/p>\n<p>Who guarantees that windows wont \u201cmiss interpreted\u201d an unconfigured policy or setting, or just the absence of a configured account and trigger the cloud backup of your most precious secret key \u201caccidently\u201d?<\/p>\n<p>Microsoft is already maintaining some sort of \u201cshadow accounts\u201d for machines which are not using a Microsoft account linked to the activation data and maintaining the app history as reported on by the <a href=\"https:\/\/www.borncity.com\/blog\/2018\/11\/03\/windows-10-app-history-auch-ohne-microsoft-konto\/\">borncity blog<\/a>.<\/p>\n<h2>But what about windows<\/h2>\n<p>One may ask: If I don\u2019t trust MSFT with making BitLocker secure or even assume they may have added a backdoor, isn\u2019t everything lost anyways for every tool that runs under MSFT Windows anyways?<\/p>\n<p>Windows itself could indeed just extract any cryptographic keys from 3rd party tools from Memory and send it to Redmond, but this is highly unlikely to be implemented. A backdoor by a large company must be implemented such that it being intentional can always be plausibly denied, it must look like a programming error.<\/p>\n<p>Therefor an obvious backdoor in Windows, like intentionally sending keys from a 3rd party encryption tool to MSFT, is highly unlikely as this could be found out, especially if it happens on every windows system and, could not be plausibly denied by MSFT.<\/p>\n<p>One deniable channel of attack could be to intentionally crash the system with an update, grab the kernel crash dump and arrange things for it to likely include the sought for keys. But than if you value your privacy you should have disabled error reporting and probably system crash dump creation altogether anyways. Also, MSFT is not in the business of crashing their user\u2019s PC\u2019s on purpose it is extremely unlikely that would role something like that out to all their users. And if you are interesting enough for a targeted effort, you should indeed switch to a self-compiled Linux ASAP.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>First what is BitLocker BitLocker is a logical volume encryption feature included with Microsoft Windows (Pro and Enterprise\/Education versions) starting with Windows Vista. It is designed to protect data by providing encryption for entire volumes. On older versions of windows like vista and 7 this feature can only work with a TPM-Chip. So Why not &hellip; <a href=\"https:\/\/diskcryptor.org\/why-not-bitlocker\/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">Why not BitLocker<\/span> <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/116"}],"collection":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/comments?post=116"}],"version-history":[{"count":1,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/116\/revisions"}],"predecessor-version":[{"id":165,"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/pages\/116\/revisions\/165"}],"wp:attachment":[{"href":"https:\/\/diskcryptor.org\/wp-json\/wp\/v2\/media?parent=116"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}